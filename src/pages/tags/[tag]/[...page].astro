---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import Recipe from "../../../components/Recipe.astro";
import PaginationNav from "../../../components/PaginationNav.astro";

export async function getStaticPaths({ paginate }) {
  const allRecipes = await Astro.glob('../../recipes/*.md');

  const uniqueTags = [...new Set(allRecipes.map((recipe) => recipe.frontmatter.tags).flat())];

  return uniqueTags.map((tag) => {

    const filteredRecipes = allRecipes.filter((recipe) => {
      if (recipe.frontmatter.tags === undefined) return false;
      else return recipe.frontmatter.tags.includes(tag)
    });

    return paginate(filteredRecipes, {
      params: { tag },
      pageSize: 18
    })
  });
}

const params = Astro.params;
const { page } = Astro.props;
---
<BaseLayout pageTitle={params.tag}>
  <p>Posts tagged with {params.tag}</p>
  <PaginationNav page={page} entry_type={"Recipes"} />
  <div class="grid sm:grid-cols-3 grid-cols-1 justify-items-center">
    {page.data.map((recipe) => <Recipe title={recipe.frontmatter.title} img_url={recipe.frontmatter.image_url} tags={recipe.frontmatter.tags} url={recipe.url} />)}
  </div>
  <PaginationNav page={page} entry_type={"Recipes"} />
</BaseLayout>